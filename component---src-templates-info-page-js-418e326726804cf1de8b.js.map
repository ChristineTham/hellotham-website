{"version":3,"sources":["webpack:///./src/components/Content.js","webpack:///./src/templates/info-page.js"],"names":["HTMLContent","content","className","dangerouslySetInnerHTML","__html","Content","InfoPageTemplate","title","subtitle","image","style","backgroundImage","childImageSharp","fluid","src","backgroundPosition","backgroundAttachment","display","height","lineHeight","justifyContent","alignItems","flexDirection","backgroundColor","color","padding","InfoPage","post","data","markdownRemark","frontmatter","html","pageQuery"],"mappings":"4FAAA,2DAGaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAZ,OACzB,yBAAKA,UAAWA,EAAWC,wBAAyB,CAAEC,OAAQH,MAcjDI,IAXC,SAAC,GAAD,IAAGJ,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAZ,OACd,yBAAKA,UAAWA,GAAYD,K,kCCR9B,mJAOaK,EAAmB,SAAC,GAAD,IAC9BC,EAD8B,EAC9BA,MACAC,EAF8B,EAE9BA,SACAC,EAH8B,EAG9BA,MACAR,EAJ8B,EAI9BA,QAJ8B,OAM9B,6BACE,yBACEC,UAAU,gCACVQ,MAAO,CACLC,gBAAgB,QACZF,EAAMG,gBAAkBH,EAAMG,gBAAgBC,MAAMC,IAAML,GAD/C,IAGfM,mBAAmB,WACnBC,qBAAqB,UAGvB,yBACEN,MAAO,CACLO,QAAS,OACTC,OAAQ,QACRC,WAAY,IACZC,eAAgB,SAChBC,WAAY,SACZC,cAAe,WAGjB,wBACEpB,UAAU,gGACVQ,MAAO,CACLa,gBAAiB,UACjBC,MAAO,UACPL,WAAY,IACZM,QAAS,WAGVlB,GAEH,wBACEL,UAAU,gGACVQ,MAAO,CACLa,gBAAiB,UACjBC,MAAO,QACPL,WAAY,IACZM,QAAS,WAGVjB,KAIP,6BAASN,UAAU,6BACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,WACb,kBAAC,IAAD,CAAaA,UAAU,UAAUD,QAASA,WAmCzCyB,UAnBE,SAAC,GAAc,IACNC,EADK,EAAXC,KACVC,eAER,OACE,kBAAC,IAAD,KACE,kBAACvB,EAAD,CACEC,MAAOoB,EAAKG,YAAYvB,MACxBC,SAAUmB,EAAKG,YAAYtB,SAC3BC,MAAOkB,EAAKG,YAAYrB,MACxBR,QAAS0B,EAAKI,SAYf,IAAMC,EAAS","file":"component---src-templates-info-page-js-418e326726804cf1de8b.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport const HTMLContent = ({ content, className }) => (\n  <div className={className} dangerouslySetInnerHTML={{ __html: content }} />\n)\n\nconst Content = ({ content, className }) => (\n  <div className={className}>{content}</div>\n)\n\nContent.propTypes = {\n  content: PropTypes.node,\n  className: PropTypes.string,\n}\n\nHTMLContent.propTypes = Content.propTypes\n\nexport default Content\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport { HTMLContent } from '../components/Content'\n\nexport const InfoPageTemplate = ({\n  title,\n  subtitle,\n  image,\n  content\n}) => (\n  <div>\n    <div\n      className=\"full-width-image margin-top-0\"\n      style={{\n        backgroundImage: `url(${\n          !!image.childImageSharp ? image.childImageSharp.fluid.src : image\n        })`,\n        backgroundPosition: `top left`,\n        backgroundAttachment: `fixed`,\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          height: '150px',\n          lineHeight: '1',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexDirection: 'column',\n        }}\n      >\n        <h1\n          className=\"has-text-centered has-text-weight-bold is-size-3-mobile is-size-2-tablet is-size-1-widescreen\"\n          style={{\n            backgroundColor: '#ff99cc',\n            color: '#660099',\n            lineHeight: '1',\n            padding: '0.25em',\n          }}\n        >\n          {title}\n        </h1>\n        <h3\n          className=\"has-text-centered has-text-weight-bold is-size-5-mobile is-size-5-tablet is-size-4-widescreen\"\n          style={{\n            backgroundColor: '#cc3366',\n            color: 'white',\n            lineHeight: '1',\n            padding: '0.25em',\n          }}\n        >\n          {subtitle}\n        </h3>\n      </div>\n    </div>\n    <section className=\"section section--gradient\">\n      <div className=\"container\">\n        <div className=\"columns\">\n          <div className=\"column is-10 is-offset-1\">\n            <div className=\"section\">\n              <HTMLContent className=\"content\" content={content} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  </div>\n)\n\nInfoPageTemplate.propTypes = {\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  content: PropTypes.string,\n}\n\nconst InfoPage = ({ data }) => {\n  const { markdownRemark: post } = data\n\n  return (\n    <Layout>\n      <InfoPageTemplate\n        title={post.frontmatter.title}\n        subtitle={post.frontmatter.subtitle}\n        image={post.frontmatter.image}\n        content={post.html}\n      />\n    </Layout>\n  )\n}\n\nInfoPage.propTypes = {\n  data: PropTypes.object.isRequired,\n}\n\nexport default InfoPage\n\nexport const pageQuery = graphql`\n  query InfoPage($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      frontmatter {\n        title\n        subtitle\n        image {\n          childImageSharp {\n            fluid(maxWidth: 2048, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}