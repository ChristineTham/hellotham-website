{"version":3,"sources":["webpack:///./src/components/Features.js","webpack:///./src/templates/index-page.js"],"names":["FeatureGrid","gridItems","className","map","item","key","text","to","link","title","style","width","display","PreviewCompatibleImage","imageInfo","IndexPageTemplate","image","heading","subheading","mainpitch","description","intro","backgroundImage","childImageSharp","fluid","src","backgroundPosition","backgroundAttachment","height","lineHeight","justifyContent","alignItems","flexDirection","logo","alt","backgroundColor","color","padding","Features","blurbs","BlogRoll","limit","pageQuery","IndexPage","frontmatter","data","markdownRemark","Layout"],"mappings":"0QAyCeA,EApCK,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OAClB,yBAAKC,UAAU,wBACZD,EAAUE,KAAI,SAACC,GAAD,OACb,yBAAKC,IAAKD,EAAKE,KAAMJ,UAAU,eAC7B,6BAASA,UAAU,WACjB,yBAAKA,UAAU,qBACb,4BACE,kBAAC,IAAD,CAAMA,UAAU,6BAA6BK,GAAIH,EAAKI,MACnDJ,EAAKK,QAGV,yBACEC,MAAO,CACLC,MAAO,QACPC,QAAS,iBAGX,kBAACC,EAAA,EAAD,CAAwBC,UAAWV,MAGvC,2BAAIA,EAAKE,a,iCChBNS,EAAoB,SAAC,GAAD,IAC/BC,EAD+B,EAC/BA,MAEAC,GAH+B,EAE/BR,MAF+B,EAG/BQ,SACAC,EAJ+B,EAI/BA,WACAC,EAL+B,EAK/BA,UACAC,EAN+B,EAM/BA,YACAC,EAP+B,EAO/BA,MAP+B,OAS/B,6BACE,yBACEnB,UAAU,gCACVQ,MAAO,CACLY,gBAAgB,QACZN,EAAMO,gBAAkBP,EAAMO,gBAAgBC,MAAMC,IAAMT,GAD/C,IAGfU,mBAAmB,WACnBC,qBAAqB,UAGvB,yBACEjB,MAAO,CACLE,QAAS,OACTgB,OAAQ,QACRC,WAAY,IACZC,eAAgB,eAChBC,WAAY,SACZC,cAAe,WAGjB,yBAAKP,IAAKQ,IAAMC,IAAI,kBAAkBxB,MAAO,CAAEC,MAAO,WACtD,wBACET,UAAU,gGACVQ,MAAO,CACLyB,gBAAiB,UACjBC,MAAO,QACPP,WAAY,IACZQ,QAAS,SACT1B,MAAO,UAGRO,KAiBP,6BAAShB,UAAU,6BACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,QACb,wBAAIA,UAAU,SAASiB,EAAUV,QAEnC,yBAAKP,UAAU,QACb,wBAAIA,UAAU,YAAYiB,EAAUC,eAGxC,yBAAKlB,UAAU,WACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,sCACXe,GAEH,2BAAIG,KAGR,kBAACkB,EAAD,CAAUrC,UAAWoB,EAAMkB,SAC3B,yBAAKrC,UAAU,gBACb,wBAAIA,UAAU,sCAAd,uBAGA,kBAACsC,EAAA,EAAD,CAAUC,MAAO,IACjB,yBAAKvC,UAAU,kCACb,kBAAC,IAAD,CAAMA,UAAU,6BAA6BK,GAAG,SAAhD,uBAsDPmC,GAFEC,UA1BG,SAAC,GAAc,IACvBC,EADsB,EAAXC,KACUC,eAArBF,YAER,OACE,kBAACG,EAAA,EAAD,KACE,kBAAC,EAAD,CACE/B,MAAO4B,EAAY5B,MACnBP,MAAOmC,EAAYnC,MACnBQ,QAAS2B,EAAY3B,QACrBC,WAAY0B,EAAY1B,WACxBC,UAAWyB,EAAYzB,UACvBC,YAAawB,EAAYxB,YACzBC,MAAOuB,EAAYvB,UAgBL","file":"component---src-templates-index-page-js-b271547716c4a2cba497.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport PreviewCompatibleImage from '../components/PreviewCompatibleImage'\n\nconst FeatureGrid = ({ gridItems }) => (\n  <div className=\"columns is-multiline\">\n    {gridItems.map((item) => (\n      <div key={item.text} className=\"column is-6\">\n        <section className=\"section\">\n          <div className=\"has-text-centered\">\n            <h3>\n              <Link className=\"button is-large is-primary\" to={item.link}>\n                {item.title}\n              </Link>\n            </h3>\n            <div\n              style={{\n                width: '240px',\n                display: 'inline-block',\n              }}\n            >\n              <PreviewCompatibleImage imageInfo={item} />\n            </div>\n          </div>\n          <p>{item.text}</p>\n        </section>\n      </div>\n    ))}\n  </div>\n)\n\nFeatureGrid.propTypes = {\n  gridItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n      text: PropTypes.string,\n    })\n  ),\n}\n\nexport default FeatureGrid\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport Features from '../components/Features'\nimport BlogRoll from '../components/BlogRoll'\nimport logo from '../img/logo.svg'\n\nexport const IndexPageTemplate = ({\n  image,\n  title,\n  heading,\n  subheading,\n  mainpitch,\n  description,\n  intro\n}) => (\n  <div>\n    <div\n      className=\"full-width-image margin-top-0\"\n      style={{\n        backgroundImage: `url(${\n          !!image.childImageSharp ? image.childImageSharp.fluid.src : image\n        })`,\n        backgroundPosition: `top left`,\n        backgroundAttachment: `fixed`,\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          height: '150px',\n          lineHeight: '1',\n          justifyContent: 'space-around',\n          alignItems: 'center',\n          flexDirection: 'column',\n        }}\n      >\n        <img src={logo} alt=\"Hello Tham Logo\" style={{ width: '300px'}}/>\n        <h1\n          className=\"has-text-centered has-text-weight-bold is-size-3-mobile is-size-2-tablet is-size-1-widescreen\"\n          style={{\n            backgroundColor: '#cc3366',\n            color: 'white',\n            lineHeight: '1',\n            padding: '0.25em',\n            width: '300px'\n          }}\n        >\n          {subheading}\n        </h1>\n        {/*}\n        <h3\n          className=\"has-text-weight-bold is-size-5-mobile is-size-5-tablet is-size-4-widescreen\"\n          style={{\n            backgroundColor: '#cc3366',\n            color: 'white',\n            lineHeight: '1',\n            padding: '0.25em',\n          }}\n        >\n          {subheading}\n        </h3>\n        */}\n      </div>\n    </div>\n    <section className=\"section section--gradient\">\n      <div className=\"container\">\n        <div className=\"section\">\n          <div className=\"columns\">\n            <div className=\"column is-10 is-offset-1\">\n              <div className=\"content\">\n                <div className=\"content\">\n                  <div className=\"tile\">\n                    <h1 className=\"title\">{mainpitch.title}</h1>\n                  </div>\n                  <div className=\"tile\">\n                    <h4 className=\"subtitle\">{mainpitch.description}</h4>\n                  </div>\n                </div>\n                <div className=\"columns\">\n                  <div className=\"column is-12\">\n                    <h3 className=\"has-text-weight-semibold is-size-2\">\n                      {heading}\n                    </h3>\n                    <p>{description}</p>\n                  </div>\n                </div>\n                <Features gridItems={intro.blurbs} />\n                <div className=\"column is-12\">\n                  <h3 className=\"has-text-weight-semibold is-size-2\">\n                    Our latest articles\n                  </h3>\n                  <BlogRoll limit={4} />\n                  <div className=\"column is-12 has-text-centered\">\n                    <Link className=\"button is-primary is-large\" to=\"/blog\">\n                      Read more\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  </div>\n)\n\nIndexPageTemplate.propTypes = {\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  title: PropTypes.string,\n  heading: PropTypes.string,\n  subheading: PropTypes.string,\n  mainpitch: PropTypes.object,\n  description: PropTypes.string,\n  intro: PropTypes.shape({\n    blurbs: PropTypes.array,\n  }),\n}\n\nconst IndexPage = ({ data }) => {\n  const { frontmatter } = data.markdownRemark\n\n  return (\n    <Layout>\n      <IndexPageTemplate\n        image={frontmatter.image}\n        title={frontmatter.title}\n        heading={frontmatter.heading}\n        subheading={frontmatter.subheading}\n        mainpitch={frontmatter.mainpitch}\n        description={frontmatter.description}\n        intro={frontmatter.intro}\n      />\n    </Layout>\n  )\n}\n\nIndexPage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.object,\n    }),\n  }),\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query IndexPageTemplate {\n    markdownRemark(frontmatter: { templateKey: { eq: \"index-page\" } }) {\n      frontmatter {\n        title\n        image {\n          childImageSharp {\n            fluid(maxWidth: 2048, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        heading\n        subheading\n        mainpitch {\n          title\n          description\n        }\n        description\n        intro {\n          blurbs {\n            title\n            image {\n              childImageSharp {\n                fluid(maxWidth: 240, quality: 64) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            text\n            link\n          }\n          heading\n          description\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}